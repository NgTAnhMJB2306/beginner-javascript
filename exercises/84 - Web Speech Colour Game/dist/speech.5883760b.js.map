{"version":3,"sources":["colors.js","handlers.js","speech.js"],"names":["colors","black","silver","gray","grey","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","darkblue","mediumblue","darkgreen","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","springgreen","cyan","midnightblue","dodgerblue","lightseagreen","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","rebeccapurple","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","thistle","orchid","goldenrod","palevioletred","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","lightyellow","ivory","isDark","colorName","hex","substring","r","parseInt","g","b","colorsByLength","Object","keys","sort","a","length","isValidColor","word","logWords","results","handleResult","words","transcript","color","toLowerCase","replace","colorSpan","document","querySelector","classList","add","console","log","body","style","backgroundColor","colorsEl","displayColors","map","join","window","SpeechRecognition","webkitSpeechRecognition","start","recognition","continuous","interimResults","onresult","innerHTML"],"mappings":"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","file":"speech.5883760b.js","sourceRoot":"..","sourcesContent":["// color.js\r\n\r\nexport const colors = {\r\n    black: \"#000000\",\r\n    silver: \"#C0C0C0\",\r\n    gray: \"#808080\",\r\n    grey: \"#808080\",\r\n    white: \"#FFFFFF\",\r\n    maroon: \"#800000\",\r\n    red: \"#FF0000\",\r\n    purple: \"#800080\",\r\n    fuchsia: \"#FF00FF\",\r\n    green: \"#008000\",\r\n    lime: \"#00FF00\",\r\n    olive: \"#808000\",\r\n    yellow: \"#FFFF00\",\r\n    navy: \"#000080\",\r\n    blue: \"#0000FF\",\r\n    teal: \"#008080\",\r\n    aqua: \"#00FFFF\",\r\n    darkblue: \"#00008B\",\r\n    mediumblue: \"#0000CD\",\r\n    darkgreen: \"#006400\",\r\n    darkcyan: \"#008B8B\",\r\n    deepskyblue: \"#00BFFF\",\r\n    darkturquoise: \"#00CED1\",\r\n    mediumspringgreen: \"#00FA9A\",\r\n    springgreen: \"#00FF7F\",\r\n    cyan: \"#00FFFF\",\r\n    midnightblue: \"#191970\",\r\n    dodgerblue: \"#1E90FF\",\r\n    lightseagreen: \"#20B2AA\",\r\n    forestgreen: \"#228B22\",\r\n    seagreen: \"#2E8B57\",\r\n    darkslategray: \"#2F4F4F\",\r\n    darkslategrey: \"#2F4F4F\",\r\n    limegreen: \"#32CD32\",\r\n    mediumseagreen: \"#3CB371\",\r\n    turquoise: \"#40E0D0\",\r\n    royalblue: \"#4169E1\",\r\n    steelblue: \"#4682B4\",\r\n    darkslateblue: \"#483D8B\",\r\n    mediumturquoise: \"#48D1CC\",\r\n    indigo: \"#4B0082\",\r\n    darkolivegreen: \"#556B2F\",\r\n    cadetblue: \"#5F9EA0\",\r\n    cornflowerblue: \"#6495ED\",\r\n    rebeccapurple: \"#663399\",\r\n    mediumaquamarine: \"#66CDAA\",\r\n    dimgray: \"#696969\",\r\n    dimgrey: \"#696969\",\r\n    slateblue: \"#6A5ACD\",\r\n    olivedrab: \"#6B8E23\",\r\n    slategray: \"#708090\",\r\n    slategrey: \"#708090\",\r\n    lightslategray: \"#778899\",\r\n    lightslategrey: \"#778899\",\r\n    mediumslateblue: \"#7B68EE\",\r\n    lawngreen: \"#7CFC00\",\r\n    chartreuse: \"#7FFF00\",\r\n    aquamarine: \"#7FFFD4\",\r\n    skyblue: \"#87CEEB\",\r\n    lightskyblue: \"#87CEFA\",\r\n    blueviolet: \"#8A2BE2\",\r\n    darkred: \"#8B0000\",\r\n    darkmagenta: \"#8B008B\",\r\n    saddlebrown: \"#8B4513\",\r\n    darkseagreen: \"#8FBC8F\",\r\n    lightgreen: \"#90EE90\",\r\n    mediumpurple: \"#9370DB\",\r\n    darkviolet: \"#9400D3\",\r\n    palegreen: \"#98FB98\",\r\n    darkorchid: \"#9932CC\",\r\n    yellowgreen: \"#9ACD32\",\r\n    sienna: \"#A0522D\",\r\n    brown: \"#A52A2A\",\r\n    darkgray: \"#A9A9A9\",\r\n    darkgrey: \"#A9A9A9\",\r\n    lightblue: \"#ADD8E6\",\r\n    greenyellow: \"#ADFF2F\",\r\n    paleturquoise: \"#AFEEEE\",\r\n    lightsteelblue: \"#B0C4DE\",\r\n    powderblue: \"#B0E0E6\",\r\n    firebrick: \"#B22222\",\r\n    darkgoldenrod: \"#B8860B\",\r\n    mediumorchid: \"#BA55D3\",\r\n    rosybrown: \"#BC8F8F\",\r\n    darkkhaki: \"#BDB76B\",\r\n    mediumvioletred: \"#C71585\",\r\n    indianred: \"#CD5C5C\",\r\n    peru: \"#CD853F\",\r\n    chocolate: \"#D2691E\",\r\n    tan: \"#D2B48C\",\r\n    lightgray: \"#D3D3D3\",\r\n    lightgrey: \"#D3D3D3\",\r\n    thistle: \"#D8BFD8\",\r\n    orchid: \"#DA70D6\",\r\n    goldenrod: \"#DAA520\",\r\n    palevioletred: \"#DB7093\",\r\n    crimson: \"#DC143C\",\r\n    gainsboro: \"#DCDCDC\",\r\n    plum: \"#DDA0DD\",\r\n    burlywood: \"#DEB887\",\r\n    lightcyan: \"#E0FFFF\",\r\n    lavender: \"#E6E6FA\",\r\n    darksalmon: \"#E9967A\",\r\n    violet: \"#EE82EE\",\r\n    palegoldenrod: \"#EEE8AA\",\r\n    lightcoral: \"#F08080\",\r\n    khaki: \"#F0E68C\",\r\n    aliceblue: \"#F0F8FF\",\r\n    honeydew: \"#F0FFF0\",\r\n    azure: \"#F0FFFF\",\r\n    sandybrown: \"#F4A460\",\r\n    wheat: \"#F5DEB3\",\r\n    beige: \"#F5F5DC\",\r\n    whitesmoke: \"#F5F5F5\",\r\n    mintcream: \"#F5FFFA\",\r\n    ghostwhite: \"#F8F8FF\",\r\n    salmon: \"#FA8072\",\r\n    antiquewhite: \"#FAEBD7\",\r\n    linen: \"#FAF0E6\",\r\n    lightgoldenrodyellow: \"#FAFAD2\",\r\n    oldlace: \"#FDF5E6\",\r\n    magenta: \"#FF00FF\",\r\n    deeppink: \"#FF1493\",\r\n    orangered: \"#FF4500\",\r\n    tomato: \"#FF6347\",\r\n    hotpink: \"#FF69B4\",\r\n    coral: \"#FF7F50\",\r\n    darkorange: \"#FF8C00\",\r\n    lightsalmon: \"#FFA07A\",\r\n    orange: \"#FFA500\",\r\n    lightpink: \"#FFB6C1\",\r\n    pink: \"#FFC0CB\",\r\n    gold: \"#FFD700\",\r\n    peachpuff: \"#FFDAB9\",\r\n    navajowhite: \"#FFDEAD\",\r\n    moccasin: \"#FFE4B5\",\r\n    bisque: \"#FFE4C4\",\r\n    mistyrose: \"#FFE4E1\",\r\n    blanchedalmond: \"#FFEBCD\",\r\n    papayawhip: \"#FFEFD5\",\r\n    lavenderblush: \"#FFF0F5\",\r\n    seashell: \"#FFF5EE\",\r\n    cornsilk: \"#FFF8DC\",\r\n    lemonchiffon: \"#FFFACD\",\r\n    floralwhite: \"#FFFAF0\",\r\n    snow: \"#FFFAFA\",\r\n    lightyellow: \"#FFFFE0\",\r\n    ivory: \"#FFFFF0\",\r\n};\r\n\r\nexport function isDark(colorName) {\r\n    const hex = colors[colorName].substring(1, 7);\r\n    const r = parseInt(hex.substring(0, 2), 16);\r\n    const g = parseInt(hex.substring(2, 4), 16);\r\n    const b = parseInt(hex.substring(4, 6), 16);\r\n    return r * 0.299 + g * 0.587 + b * 0.114 < 120;\r\n}\r\n\r\nexport const colorsByLength = Object.keys(colors).sort(\r\n    (a, b) => a.length - b.length\r\n);\r\n\r\nexport function isValidColor(word) {\r\n    return !!colors[word];\r\n}","// handlers.js\r\n\r\nimport { isValidColor } from \"./colors.js\";\r\n\r\nfunction logWords(results) {\r\n    // console.log(results[results.length - 1][0].transcript);\r\n}\r\n\r\nexport function handleResult({ results }) {\r\n    logWords(results);\r\n    const words = results[results.length - 1][0].transcript;\r\n    // lowercase everything\r\n    let color = words.toLowerCase();\r\n    // strip any spaces out\r\n    color = color.replace(/\\s/g, \"\");\r\n    // check if it is a valid colour\r\n    if (!isValidColor(color)) return; // thats all folks\r\n    // if it is, then show the UI for that\r\n    const colorSpan = document.querySelector(`.${color}`);\r\n    colorSpan.classList.add(\"got\");\r\n    console.log(colorSpan);\r\n    console.log(\"This is a valid color!\");\r\n    console.log(color);\r\n    // change the background color\r\n    document.body.style.backgroundColor = color;\r\n}","// speech.js\r\n\r\nimport { handleResult } from \"./handlers\";\r\nimport { colorsByLength, isDark } from \"./colors\";\r\n\r\nconst colorsEl = document.querySelector(\".colors\");\r\n\r\nfunction displayColors(colors) {\r\n    return colors\r\n        .map(\r\n            (color) =>\r\n                `<span class=\"color ${color} ${isDark(color) ? \"dark\" : \"\"\r\n                }\" style=\"background: ${color};\">${color}</span>`\r\n        )\r\n        .join(\"\");\r\n}\r\n\r\nwindow.SpeechRecognition =\r\n    window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\nfunction start() {\r\n    // see if their browser supports this\r\n    if (!window.SpeechRecognition) {\r\n        console.log(\"Sorry your browser does not support speech reco. \");\r\n        return;\r\n    }\r\n    // it does work\r\n    console.log(\"Starting...\");\r\n    // make a new speech reco\r\n    const recognition = new SpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.onresult = handleResult;\r\n    recognition.start();\r\n}\r\n\r\nstart();\r\ncolorsEl.innerHTML = displayColors(colorsByLength);"]}